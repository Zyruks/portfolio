---
import { cn } from '@common';
import Tag from '../Tag/Tag.astro';

interface Props {
  /**
   * The title of the item.
   */
  title: string;

  /**
   * The main content or body text.
   */
  body: string;

  /**
   * The URL for a hyperlink.
   */
  href: string;

  /**
   * Additional CSS class to be applied, optional.
   */
  class?: string;

  /**
   * An array of tags associated with the item.
   */
  tags: Array<string>;

  /**
   * The date associated with the item.
   */
  date: string;

  /**
   * An optional subtitle.
   */
  subTitle?: string;
}

const { href, title, body, class: className, tags, date, subTitle } = Astro.props;

const classes = {
  container: cn(
    'projects-card',
    'group',
    'w-full rounded-2xl border-2 border-gray-900 hover:border-gray-700',
    'bg-gray-900 hover:bg-gray-800',
    'transition-all duration-300',
    'shadow-sm shadow-transparent hover:shadow-md hover:shadow-slate-950',

    // update view on mobile
    'data-[on-view=true]:border-gray-700',
    'data-[on-view=true]:bg-gray-800',
    'data-[on-view=true]:shadow-slate-950',
    className
  ),
  date: cn('whitespace-nowrap text-gray-400 group-hover:text-gray-200 transition-colors duration-500'),
  title: cn('text-lg font-bold text-gray-100 flex gap-4 items-center'),
  subtitle: cn('mt-2 block text-gray-400 group-hover:text-gray-300 transition-colors duration-500'),
  body: cn('mt-2 text-gray-400'),
  tagContainer: cn('col-start-2 col-end-4 flex flex-wrap gap-4'),
};
---

<article class={classes.container} data-on-view="false">
  {
    href === '' ? (
      <div class="flex flex-col gap-2 p-4 lg:grid lg:grid-cols-[20%,1fr] lg:gap-10 xl:grid-cols-[15%,1fr]">
        <span class={classes.date}>{date}</span>
        <div>
          <h2 class={classes.title}>{title}</h2>
          <span class={classes.subtitle}>{subTitle}</span>
          <p class={classes.body}>{body}</p>
        </div>
        <div class={classes.tagContainer}>
          {tags.map((tag) => (
            <Tag>{tag}</Tag>
          ))}
        </div>
      </div>
    ) : (
      <a href={href} target="_blank" class="flex flex-col gap-2 p-4 lg:grid lg:grid-cols-[20%,1fr] lg:gap-10 xl:grid-cols-[15%,1fr]">
        <span class={classes.date}>{date}</span>
        <div>
          <h2 class={classes.title}>{title}</h2>
          <span class={classes.subtitle}>{subTitle}</span>
          <p class={classes.body}>{body}</p>
        </div>
        <div class={classes.tagContainer}>
          {tags.map((tag) => (
            <Tag>{tag}</Tag>
          ))}
        </div>
      </a>
    )
  }
</article>

<script>
  const projectSection = document.querySelectorAll('.projects-card');

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting && window.innerWidth <= 1024) {
          entry.target.setAttribute('data-on-view', 'true');
        } else {
          entry.target.setAttribute('data-on-view', 'false');
        }
      });
    },
    { threshold: 1 }
  );

  projectSection.forEach((project) => observer.observe(project));
</script>
